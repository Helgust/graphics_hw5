#version 430

#define GROUP_SIZE 256

layout( local_size_x = GROUP_SIZE ) in;

layout( push_constant ) uniform params {
  uint len;
  uint depth;
} PushConstant;

layout(std430, binding = 0) buffer a 
{
    float A[];
};

layout(std430, binding = 1) buffer Sum
{
    float sum[];
};

shared float temp[2*GROUP_SIZE];

void main() 
{
  uint steps;
    if(PushConstant.depth == 0 )
    {
        steps = 1;
    }
    else
    {
        steps = 2*GROUP_SIZE;
    }
    uint idx = gl_LocalInvocationID.x;
    uint buffer_pos = gl_WorkGroupID.x * 2 * GROUP_SIZE + idx;

    temp[idx] = A[steps - 1 + buffer_pos * steps];
    temp[idx + GROUP_SIZE] = A[steps - 1 + (buffer_pos + GROUP_SIZE) * steps];

    uint offset = 1;
    for (uint d = GROUP_SIZE; d > 0; d >>= 1)
    {
        barrier();
        if (idx < d)
        {
            temp[offset * (2*idx + 2) - 1]
                += temp[offset * (2*idx + 1) - 1];
        }
        offset <<= 1;
    }

    barrier();

    sum[buffer_pos] = temp[idx];
    sum[buffer_pos + GROUP_SIZE] = temp[idx + GROUP_SIZE];
}